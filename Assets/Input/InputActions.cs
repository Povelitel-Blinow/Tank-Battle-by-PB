//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Input/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""InTank"",
            ""id"": ""e4e137a2-004e-49ca-974a-39c450cebdb0"",
            ""actions"": [
                {
                    ""name"": ""Look"",
                    ""type"": ""PassThrough"",
                    ""id"": ""3511a5dc-1d29-4c85-a408-4fb44b44d207"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""cac7fa35-fa6e-40db-b09d-9441763599a0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeSeats"",
                    ""type"": ""Button"",
                    ""id"": ""454d8b48-a612-4a66-b717-5cdc67e9d578"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Special"",
                    ""type"": ""Button"",
                    ""id"": ""bdd729d1-1b45-47e0-8810-232ca45527de"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Aiming"",
                    ""type"": ""PassThrough"",
                    ""id"": ""a9fad0c4-7f50-4f61-976f-62fbeba8a0c0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GetUp"",
                    ""type"": ""PassThrough"",
                    ""id"": ""2db93bfb-bdf7-4402-8a50-33b59abf09bd"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e190c275-e12a-4288-9304-d9512ffa198e"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f9812f7a-f8a5-4700-b296-093d4e6df83b"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeSeats"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8ed5c95f-627d-4a6f-9ad1-1f18e3dfb948"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1276211c-c4da-44a1-acd7-20a710e4764b"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Special"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Aiming"",
                    ""id"": ""37984897-42da-4b17-99c0-fc6a7c7a9519"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aiming"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""71b8704c-534b-4c29-8cae-f8f13006478f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aiming"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c06fc4d8-92e4-4334-9308-db0db928e783"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aiming"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""fc84f300-4106-4de5-a2c1-e9e8d6671a4a"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aiming"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""9810c0d1-24e9-4891-ae4e-a4bbd1bc9c73"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aiming"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""UpDown"",
                    ""id"": ""357698cf-184d-41a2-b8ea-68205000fe86"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GetUp"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ecfb90e9-a2c6-4d04-be95-94eb92453227"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GetUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""81c1ebb3-0f58-4b16-9cc0-d961fbfe21c8"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GetUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // InTank
        m_InTank = asset.FindActionMap("InTank", throwIfNotFound: true);
        m_InTank_Look = m_InTank.FindAction("Look", throwIfNotFound: true);
        m_InTank_Interact = m_InTank.FindAction("Interact", throwIfNotFound: true);
        m_InTank_ChangeSeats = m_InTank.FindAction("ChangeSeats", throwIfNotFound: true);
        m_InTank_Special = m_InTank.FindAction("Special", throwIfNotFound: true);
        m_InTank_Aiming = m_InTank.FindAction("Aiming", throwIfNotFound: true);
        m_InTank_GetUp = m_InTank.FindAction("GetUp", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // InTank
    private readonly InputActionMap m_InTank;
    private IInTankActions m_InTankActionsCallbackInterface;
    private readonly InputAction m_InTank_Look;
    private readonly InputAction m_InTank_Interact;
    private readonly InputAction m_InTank_ChangeSeats;
    private readonly InputAction m_InTank_Special;
    private readonly InputAction m_InTank_Aiming;
    private readonly InputAction m_InTank_GetUp;
    public struct InTankActions
    {
        private @InputActions m_Wrapper;
        public InTankActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Look => m_Wrapper.m_InTank_Look;
        public InputAction @Interact => m_Wrapper.m_InTank_Interact;
        public InputAction @ChangeSeats => m_Wrapper.m_InTank_ChangeSeats;
        public InputAction @Special => m_Wrapper.m_InTank_Special;
        public InputAction @Aiming => m_Wrapper.m_InTank_Aiming;
        public InputAction CommanderGetUp => m_Wrapper.m_InTank_GetUp;
        public InputActionMap Get() { return m_Wrapper.m_InTank; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InTankActions set) { return set.Get(); }
        public void SetCallbacks(IInTankActions instance)
        {
            if (m_Wrapper.m_InTankActionsCallbackInterface != null)
            {
                @Look.started -= m_Wrapper.m_InTankActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_InTankActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_InTankActionsCallbackInterface.OnLook;
                @Interact.started -= m_Wrapper.m_InTankActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_InTankActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_InTankActionsCallbackInterface.OnInteract;
                @ChangeSeats.started -= m_Wrapper.m_InTankActionsCallbackInterface.OnChangeSeats;
                @ChangeSeats.performed -= m_Wrapper.m_InTankActionsCallbackInterface.OnChangeSeats;
                @ChangeSeats.canceled -= m_Wrapper.m_InTankActionsCallbackInterface.OnChangeSeats;
                @Special.started -= m_Wrapper.m_InTankActionsCallbackInterface.OnSpecial;
                @Special.performed -= m_Wrapper.m_InTankActionsCallbackInterface.OnSpecial;
                @Special.canceled -= m_Wrapper.m_InTankActionsCallbackInterface.OnSpecial;
                @Aiming.started -= m_Wrapper.m_InTankActionsCallbackInterface.OnAiming;
                @Aiming.performed -= m_Wrapper.m_InTankActionsCallbackInterface.OnAiming;
                @Aiming.canceled -= m_Wrapper.m_InTankActionsCallbackInterface.OnAiming;
                CommanderGetUp.started -= m_Wrapper.m_InTankActionsCallbackInterface.OnGetUp;
                CommanderGetUp.performed -= m_Wrapper.m_InTankActionsCallbackInterface.OnGetUp;
                CommanderGetUp.canceled -= m_Wrapper.m_InTankActionsCallbackInterface.OnGetUp;
            }
            m_Wrapper.m_InTankActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @ChangeSeats.started += instance.OnChangeSeats;
                @ChangeSeats.performed += instance.OnChangeSeats;
                @ChangeSeats.canceled += instance.OnChangeSeats;
                @Special.started += instance.OnSpecial;
                @Special.performed += instance.OnSpecial;
                @Special.canceled += instance.OnSpecial;
                @Aiming.started += instance.OnAiming;
                @Aiming.performed += instance.OnAiming;
                @Aiming.canceled += instance.OnAiming;
                CommanderGetUp.started += instance.OnGetUp;
                CommanderGetUp.performed += instance.OnGetUp;
                CommanderGetUp.canceled += instance.OnGetUp;
            }
        }
    }
    public InTankActions @InTank => new InTankActions(this);
    public interface IInTankActions
    {
        void OnLook(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnChangeSeats(InputAction.CallbackContext context);
        void OnSpecial(InputAction.CallbackContext context);
        void OnAiming(InputAction.CallbackContext context);
        void OnGetUp(InputAction.CallbackContext context);
    }
}
